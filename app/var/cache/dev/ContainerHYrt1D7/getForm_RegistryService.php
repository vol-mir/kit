<?php

namespace ContainerHYrt1D7;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelDevContainer
{
    /*
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Form\\AnalyticGroupType' => ['privates', 'App\\Form\\AnalyticGroupType', 'getAnalyticGroupTypeService', true],
            'App\\Form\\CalculationType' => ['privates', 'App\\Form\\CalculationType', 'getCalculationTypeService', true],
            'App\\Form\\DepartmentType' => ['privates', 'App\\Form\\DepartmentType', 'getDepartmentTypeService', true],
            'App\\Form\\DocumentType' => ['privates', 'App\\Form\\DocumentType', 'getDocumentTypeService', true],
            'App\\Form\\FinanceGroupType' => ['privates', 'App\\Form\\FinanceGroupType', 'getFinanceGroupTypeService', true],
            'App\\Form\\MaterialNormType' => ['privates', 'App\\Form\\MaterialNormType', 'getMaterialNormTypeService', true],
            'App\\Form\\MaterialType' => ['privates', 'App\\Form\\MaterialType', 'getMaterialTypeService', true],
            'App\\Form\\NormDocumentType' => ['privates', 'App\\Form\\NormDocumentType', 'getNormDocumentTypeService', true],
            'App\\Form\\ProductCategoryType' => ['privates', 'App\\Form\\ProductCategoryType', 'getProductCategoryTypeService', true],
            'App\\Form\\ProductGroupType' => ['privates', 'App\\Form\\ProductGroupType', 'getProductGroupTypeService', true],
            'App\\Form\\ProductKindType' => ['privates', 'App\\Form\\ProductKindType', 'getProductKindTypeService', true],
            'App\\Form\\ProductType' => ['privates', 'App\\Form\\ProductType', 'getProductType3Service', true],
            'App\\Form\\ProductTypeType' => ['privates', 'App\\Form\\ProductTypeType', 'getProductTypeTypeService', true],
            'App\\Form\\RenditionType' => ['privates', 'App\\Form\\RenditionType', 'getRenditionTypeService', true],
            'App\\Form\\SpecificationSectionType' => ['privates', 'App\\Form\\SpecificationSectionType', 'getSpecificationSectionTypeService', true],
            'App\\Form\\SpecificationType' => ['privates', 'App\\Form\\SpecificationType', 'getSpecificationTypeService', true],
            'App\\Form\\StructureDocumentType' => ['privates', 'App\\Form\\StructureDocumentType', 'getStructureDocumentTypeService', true],
            'App\\Form\\StructureMaterialType' => ['privates', 'App\\Form\\StructureMaterialType', 'getStructureMaterialTypeService', true],
            'App\\Form\\StructureProductType' => ['privates', 'App\\Form\\StructureProductType', 'getStructureProductTypeService', true],
            'App\\Form\\StructureSectionType' => ['privates', 'App\\Form\\StructureSectionType', 'getStructureSectionTypeService', true],
            'App\\Form\\TechnologicalOperationType' => ['privates', 'App\\Form\\TechnologicalOperationType', 'getTechnologicalOperationTypeService', true],
            'App\\Form\\TrackDocumentType' => ['privates', 'App\\Form\\TrackDocumentType', 'getTrackDocumentTypeService', true],
            'App\\Form\\TrackType' => ['privates', 'App\\Form\\TrackType', 'getTrackTypeService', true],
            'App\\Form\\UnitType' => ['privates', 'App\\Form\\UnitType', 'getUnitTypeService', true],
            'App\\Form\\UserType' => ['privates', 'App\\Form\\UserType', 'getUserTypeService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
        ], [
            'App\\Form\\AnalyticGroupType' => '?',
            'App\\Form\\CalculationType' => '?',
            'App\\Form\\DepartmentType' => '?',
            'App\\Form\\DocumentType' => '?',
            'App\\Form\\FinanceGroupType' => '?',
            'App\\Form\\MaterialNormType' => '?',
            'App\\Form\\MaterialType' => '?',
            'App\\Form\\NormDocumentType' => '?',
            'App\\Form\\ProductCategoryType' => '?',
            'App\\Form\\ProductGroupType' => '?',
            'App\\Form\\ProductKindType' => '?',
            'App\\Form\\ProductType' => '?',
            'App\\Form\\ProductTypeType' => '?',
            'App\\Form\\RenditionType' => '?',
            'App\\Form\\SpecificationSectionType' => '?',
            'App\\Form\\SpecificationType' => '?',
            'App\\Form\\StructureDocumentType' => '?',
            'App\\Form\\StructureMaterialType' => '?',
            'App\\Form\\StructureProductType' => '?',
            'App\\Form\\StructureSectionType' => '?',
            'App\\Form\\TechnologicalOperationType' => '?',
            'App\\Form\\TrackDocumentType' => '?',
            'App\\Form\\TrackType' => '?',
            'App\\Form\\UnitType' => '?',
            'App\\Form\\UserType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 4 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 5 => ($container->privates['form.type_extension.form.data_collector'] ?? $container->load('getForm_TypeExtension_Form_DataCollectorService'));
        }, 6), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ?? ($container->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ?? ($container->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($container->privates['data_collector.form'] ?? $container->getDataCollector_FormService())));
    }
}
