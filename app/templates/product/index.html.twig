{% extends 'base.html.twig' %}

{% block title %}{{ 'title.page.index.product'|trans }}{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-12">
            <div class="card">
                {% if is_granted("ROLE_ADMIN") or is_granted("ROLE_OGK")  or is_granted("ROLE_OGT") or is_granted("ROLE_PEO")  or is_granted("ROLE_BUH") %}
                <div class="card-header">
                    {% include 'product/_controls.html.twig' %}
                </div>
                {% endif %}
                <div class="card-header">
                    {% include 'product/_filter.html.twig' %}
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="products" class="table table-bordered table-striped table-hover table-sm">
                        <thead>
                        <tr>
                            <th width="3%" class="toggle-all"><i id="select_all" name="select_invoice"></i></th>
                            <th></th>
                            <th width="2%"></th>
                            <th>Код</th>
                            <th>Обозначение</th>
                            <th>Наименование</th>
                            <th width="25%">Группы</th>
                            <th width="7%"></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        <tfoot>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th>Код</th>
                            <th>Обозначение</th>
                            <th>Наименование</th>
                            <th>Группы</th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                        </tfoot>
                    </table>
                </div>
                <!-- /.card-body -->
                {% if is_granted("ROLE_ADMIN") or is_granted("ROLE_OGK")  or is_granted("ROLE_OGT") %}
                <div class="card-footer">
                    {% include 'product/_controls.html.twig' %}
                </div>
                {% endif %}
                <!-- /.card-footer -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->

    {% include 'modals/delete.html.twig' %}
    {% include 'modals/edit_group_products.html.twig' %}
{% endblock %}


{% block javascripts %}
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();

            let table = $("#products").DataTable({
                "columnDefs": [
                    {
                        'render': function (data, type, row) {
                            return '';
                        },
                        "name": "checkbox",
                        "targets": 0,
                        "orderable": false,
                        "searchable": false,
                        className: 'select-checkbox',
                    },
                    {
                        'render': function (data, type, row) {
                            return row["id"];
                        },
                        "name": "yid", 
                        "targets": 1, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            symbol = '';
                            if (row["intype"] === 1) {
                                symbol = '<i class="fas fa fa-cube nav-icon"></i>';
                            } else if (row["intype"] === 3) {
                                symbol = '<i class="fas fa fa-leaf nav-icon"></i>';
                            } else if (row["intype"] === 4) {
                                symbol = '<i class="fas fa fa-book nav-icon"></i>';
                            } else {
                                symbol = row["intype"];
                            }
                            return symbol;
                        },
                        "name": "symbol", 
                        "targets": 2, 
                        "orderable": false, 
                        "searchable": false, 
                    },
                    {
                        'render': function (data, type, row) {

                            let urlShow = '';
                            if (row["intype"] === 1) {
                                urlShow = "{{ path('product_show', { 'id': 0 }) }}";
                            } else if (row["intype"] === 3) {
                                urlShow = "{{ path('material_show', { 'id': 0 }) }}";
                            } else if (row["intype"] === 4) {
                                urlShow = "{{ path('document_show', { 'id': 0 }) }}";
                            } else {
                                urlShow = row["id"];
                            }

                            urlShow = urlShow.replace("0", row["id"]);

                            return "<a href='" + urlShow + "' class='float-left' target='_blank'>" + row["id"] + "</a>";
                        },
                        "name": "id", 
                        "targets": 3
                    },
                    {
                        'render': function (data, type, row) {
                            return row["designation"];
                        },
                        "name": "designation", 
                        "targets": 4
                    },
                    {
                        'render': function (data, type, row) {
                            return row["name"];
                        },
                        "name": "name", 
                        "targets": 5
                    },
                    {
                        'render': function (data, type, row) {
                            let groups = '';
                            if (row["intype"] === 1 || row["intype"] === 3) {
                                groups = '<small>Группа: ' + row["product_group_name"] + '</small><br><small>Тип: ' + row["product_type_name"] + '</small><br><small>Вид: ' + row["product_kind_name"] + '</small><br><small>Категория: ' + row["product_category_name"] + '</small><br><small>Статья калькуляции: ' + row["product_calculation_name"] + '</small><br><small>Группа аналит. учета: ' + row["product_analytic_group_name"] + '</small><br><small>Группа фин. учета: ' + row["product_finance_group_name"] + '</small>';
                            } 
                            return groups;
                        },
                        "name": "groups", 
                        "targets": 6,
                        className: "group_column",
                    },
                    {
                        'render': function (data, type, row) {

                            let cnt = 7;
                            let ready = 0;
                            if (row["product_group_id"] != 1) {
                                ready += 100 / cnt;
                            }
                            if (row["product_type_id"] != 1) {
                                ready += 100 / cnt;
                            }
                            if (row["product_kind_id"] != 1) {
                                ready += 100 / cnt;
                            }
                            if (row["product_category_id"] != 1) {
                                ready += 100 / cnt;
                            }
                            if (row["product_calculation_id"] != 1) {
                                ready += 100 / cnt;
                            }
                            if (row["product_finance_group_id"] != 1) {
                                ready += 100 / cnt;
                            }
                            if (row["product_analytic_group_id"] != 1) {
                                ready += 100 / cnt;
                            }

                            let urlShow = '';
                            if (row["intype"] === 1) {
                                urlShow = "{{ path('product_show', { 'id': 0 }) }}";
                            } else if (row["intype"] === 3) {
                                urlShow = "{{ path('material_show', { 'id': 0 }) }}";
                            } else if (row["intype"] === 4) {
                                urlShow = "{{ path('document_show', { 'id': 0 }) }}";
                            } else {
                                urlShow = row["id"];
                            }
                            urlShow = urlShow.replace("0", row["id"]);

                            let urlEdit = '';
                            {% if (is_granted("ROLE_ADMIN") or is_granted("ROLE_OGK")) %}
                                if (row["intype"] === 1) {
                                    urlEdit = "{{ path('product_edit', { 'id': 0 }) }}";
                                } else if (row["intype"] === 3) {
                                    urlEdit = "{{ path('material_edit', { 'id': 0 }) }}";
                                } else if (row["intype"] === 4) {
                                    urlEdit = "{{ path('document_edit', { 'id': 0 }) }}";
                                }
                                urlEdit = urlEdit.replace("0", row["id"]);
                            {% elseif (is_granted("ROLE_OGT") or is_granted("ROLE_PEO") or is_granted("ROLE_BUH")) %}
                                if (row["intype"] === 1) {
                                    urlEdit = "{{ path('product_edit', { 'id': 0 }) }}";
                                } else if (row["intype"] === 3) {
                                    urlEdit = "{{ path('material_edit', { 'id': 0 }) }}";
                                }
                                urlEdit = urlEdit.replace("0", row["id"]);
                            {% endif %}

                            let buttonShow = "<li><a href='" + urlShow + "' class='dropdown-item' title='{{ 'title.show'|trans }}' target='_blank'>{{ 'title.show'|trans }}</a></li>";

                            let buttonEdit = '';
                            {% if is_granted("ROLE_ADMIN") or is_granted("ROLE_OGK") or is_granted("ROLE_OGT") or is_granted("ROLE_PEO") or is_granted("ROLE_BUH") %}
                                if (urlEdit) {
                                    buttonEdit = "<li><a href='" + urlEdit + "' class='dropdown-item' title='{{ 'title.edit'|trans }}' target='_blank'>{{ 'title.edit'|trans }}</a></li>";
                                }
                            {% endif %}

                            let buttonDelete = '';
                            {% if is_granted("ROLE_ADMIN") or is_granted("ROLE_OGK") %}
                                buttonDelete = "<li><a href='' class='dropdown-item modal-delete-dialog' title='{{ 'title.delete'|trans }}' data-toggle='modal' data-id='" + row["id"] + "'>{{ 'title.delete'|trans }}</a></li>";
                            {% endif %}


                            let groupInfo = "";
                            groupInfo += "<div class='btn-group btn-group-sm dropleft ml-1'>";
	                        groupInfo += "<button type='button' class='btn btn-default dropdown-toggle' data-toggle='dropdown'>";
       
                            if (Math.round(ready) == 100) {
	                            groupInfo += "<i class='fa fa-check text-success' aria-hidden='true'></i>";
                            } else {
                                groupInfo += "<img src='{{ asset('dist/img/fire.gif') }}'  width='20'>";
                            }

                            groupInfo += "</button>";
                            groupInfo += "<ul class='dropdown-menu'>";
                            groupInfo += "<li class='dropdown-item'>";
        	                groupInfo += "Группа: " + row["product_group_name"];
                            groupInfo += "</li>";
                            groupInfo += "<li class='dropdown-item'>";
        	                groupInfo += "Тип: " + row["product_type_name"];
                            groupInfo += "</li>";
                            groupInfo += "<li class='dropdown-item'>";
        	                groupInfo += "Вид: " + row["product_kind_name"];
                            groupInfo += "</li>";
                            groupInfo += "<li class='dropdown-item'>";
        	                groupInfo += "Категория: " + row["product_category_name"];
                            groupInfo += "</li>";
                            groupInfo += "<li class='dropdown-item'>";
        	                groupInfo += "Статья калькуляции: " + row["product_calculation_name"];
                            groupInfo += "</li>";
                            groupInfo += "<li class='dropdown-item'>";
        	                groupInfo += "Группа аналит. учета: " + row["product_analytic_group_name"];
                            groupInfo += "</li>";
                            groupInfo += "<li class='dropdown-item'>";
        	                groupInfo += "Группа фин. учета: " + row["product_finance_group_name"];
                            groupInfo += "</li>";
                            groupInfo += "</ul>";
                            groupInfo += "</div>";

                            if (row["intype"] === 4) {
                                groupInfo = '';
                            } 

                            return "<div class='btn-group btn-group-sm dropleft ml-1'><button type='button' class='btn btn-default dropdown-toggle' data-toggle='dropdown'><i class='fa fa-ellipsis-h' aria-hidden='true'></i></button><ul class='dropdown-menu'>" + buttonShow + buttonEdit + buttonDelete + "</ul></div>" + groupInfo;
                            
                        },
                        "name": "control", 
                        "targets": 7, 
                        "orderable": false, 
                        "searchable": false
                    },
                    {
                        'render': function (data, type, row) {
                            return row["intype"];
                        },
                        "name": "intype", 
                        "targets": 8, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            return row["product_group_id"];
                        },
                        "name": "product_group_id", 
                        "targets": 9, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            return row["product_type_id"];
                        },
                        "name": "product_type_id", 
                        "targets": 10, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            return row["product_kind_id"];
                        },
                        "name": "product_kind_id", 
                        "targets": 11, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            return row["product_category_id"];
                        },
                        "name": "product_category_id", 
                        "targets": 12, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            return row["product_calculation_id"];
                        },
                        "name": "product_calculation_id", 
                        "targets": 13, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            return row["product_analytic_group_id"];
                        },
                        "name": "product_analytic_group_id", 
                        "targets": 14, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                    {
                        'render': function (data, type, row) {
                            return row["product_finance_group_id"];
                        },
                        "name": "product_finance_group_id", 
                        "targets": 15, 
                        "orderable": false, 
                        "searchable": false, 
                        className: "hide_column",
                    },
                ],
                "ajax": {
                    "url": "{{ path('product_datatables') }}",
                    "type": "POST"
                },
                "stateSave": true,
                "processing": true,
                "serverSide": true,
                "responsive": true,
                "autoWidth": false,
                "paging": true,
                "info": true,
                "searching": true,
                "pageLength": 25,
                "order": [[5, 'asc']],
                "language": {
                    "url": "{{ asset('dist/json/dataTables.ru.lang.json') }}"
                },
                "select": {
                    "style": "multi",
                    "selector": "td:first-child"

                },

            }).on('select.dt deselect.dt', function (evtObj) {
                let all = table.rows().nodes().length;
                let sel = table.rows(".selected").nodes().length;

                if (all === sel) {

                    $(".toggle-all").closest("tr").addClass("selected");
                } else {

                    $(".toggle-all").closest("tr").removeClass("selected");
                }

            });


            $('#products').on('click', '.toggle-all', function () {
                $(this).closest("tr").toggleClass("selected");
                if ($(this).closest("tr").hasClass("selected")) {
                    table.rows().select();
                } else {
                    table.rows().deselect();
                }

            });

            $("#products").on("click", ".modal-delete-dialog", function () {
                $('#btn-modal-delete').attr("data-confirm-delete-id", $(this).attr('data-id'));
                $('#modal-delete').modal('show');
            });

            $("#modal-delete").on("click", "#btn-modal-delete", function () {

                let url = "{{ path('product_delete', { 'id': 0 }) }}";
                url = url.replace("0", $(this).attr('data-confirm-delete-id'));

                $.ajax({
                    type: 'post',
                    url: url,
                    data: {'_method': 'delete', '_token': '{{ csrf_token('delete-item') }}'},
                    dataType: 'json'
                }).done(function (data) {
                    table.ajax.reload(null, false);
                    if (data.messageError) {
                        toastr.error(data.messageError);
                    } else if (data.messageSuccess) {
                        toastr.success(data.messageSuccess);
                    }
                });

                $('#btn-modal-delete').attr("data-confirm-delete-id", null);
                $('#modal-delete').modal('hide');
            });


            let productsEdit = [];
            $(".edit-group").on("click", function () {
                $.each(table.rows(".selected").data().toArray(), function( index, value ) {
                    productsEdit.push(value.id);
                });
                if (productsEdit.length > 0) {
                    $('#modal-edit-group').modal('show');
                }
            });

            $("#modal-edit-group").on("click", "#btn-modal-edit", function () {

                if (productsEdit.length === 0) {
                    $('#modal-edit-group').modal('hide');
                    return;
                }

                let formData = {};

                if ($("#edit-form #edit-group").is(':checked')) {
                    formData.groupSelect = $("#edit-form #group-select").val();
                }
                if ($("#edit-form #edit-type").is(':checked')) {
                    formData.typeSelect = $("#edit-form #type-select").val();
                }
                if ($("#edit-form #edit-kind").is(':checked')) {
                    formData.kindSelect = $("#edit-form #kind-select").val();
                }
                if ($("#edit-form #edit-category").is(':checked')) {
                    formData.categorySelect = $("#edit-form #category-select").val();
                }

                if ($("#edit-form #edit-calculation").is(':checked')) {
                    formData.calculationSelect = $("#edit-form #calculation-select").val();
                }

                if ($("#edit-form #edit-analytic-group").is(':checked')) {
                    formData.analyticGroupSelect = $("#edit-form #analytic-group-select").val();
                }

                if ($("#edit-form #edit-finance-group").is(':checked')) {
                    formData.financeGroupSelect = $("#edit-form #finance-group-select").val();
                }

                if ($.isEmptyObject(formData)) {
                    $('#modal-edit-group').modal('hide');
                    return;
                }

                let url = "{{ path('products_list_edit') }}";

                $.ajax({
                    type: 'post',
                    url: url,
                    data: {
                        '_method': 'post',
                        '_token': '{{ csrf_token('products-list-edit') }}',
                        'productsEdit': JSON.stringify(productsEdit),
                        'formData': JSON.stringify(formData)
                    },
                    dataType: 'json'
                }).done(function (data) {
                    table.ajax.reload(null, false);
                    toastr.success(data.message);
                });


                $('#modal-edit-group').modal('hide');
            });



            let state = table.state.loaded();

            // filters

            // ----- start - intype -------
            let columnIntype = 8;
            let intypeCheck = $('#intype-check');
            let intypeSelect = $('#intype-select');

            if (state) {
                let colIntypeSearch = state.columns[columnIntype].search;
                if (colIntypeSearch.search) {
                    intypeCheck.prop("checked", true);
                    intypeSelect.val(colIntypeSearch.search);
                }
            }

            intypeCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnIntype).search(intypeSelect.val()).draw();
                } else {
                    table.column(columnIntype).search('').draw();
                }
            });

            intypeSelect.on('change', function () {
                if (intypeCheck.is(":checked")) {
                    table.column(columnIntype).search(intypeSelect.val()).draw();
                }
            });
            // ----- end - intype -------

            // ----- start - product-group -------
            let columnProductGroup = 9;
            let productGroupCheck = $('#product-group-check');
            let productGroupSelect = $('#product-group-select');

            if (state) {
                let colProductGroupSearch = state.columns[columnProductGroup].search;
                if (colProductGroupSearch.search) {
                    productGroupCheck.prop("checked", true);
                    productGroupSelect.val(colProductGroupSearch.search);
                }
            }

            productGroupCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnProductGroup).search(productGroupSelect.val()).draw();
                } else {
                    table.column(columnProductGroup).search('').draw();
                }
            });

            productGroupSelect.on('change', function () {
                if (productGroupCheck.is(":checked")) {
                    table.column(columnProductGroup).search(productGroupSelect.val()).draw();
                }
            });
            // ----- end - product-group -------

            // ----- start - product-type -------
            let columnProductType = 10;
            let productTypeCheck = $('#product-type-check');
            let productTypeSelect = $('#product-type-select');

            if (state) {
                let colProductTypeSearch = state.columns[columnProductType].search;
                if (colProductTypeSearch.search) {
                    productTypeCheck.prop("checked", true);
                    productTypeSelect.val(colProductTypeSearch.search);
                }
            }

            productTypeCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnProductType).search(productTypeSelect.val()).draw();
                } else {
                    table.column(columnProductType).search('').draw();
                }
            });

            productTypeSelect.on('change', function () {
                if (productTypeCheck.is(":checked")) {
                    table.column(columnProductType).search(productTypeSelect.val()).draw();
                }
            });
            // ----- end - product-type -------

            // ----- start - product-kind -------
            let columnProductKind = 11;
            let productKindCheck = $('#product-kind-check');
            let productKindSelect = $('#product-kind-select');

            if (state) {
                let colProductKindSearch = state.columns[columnProductKind].search;
                if (colProductKindSearch.search) {
                    productKindCheck.prop("checked", true);
                    productKindSelect.val(colProductKindSearch.search);
                }
            }

            productKindCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnProductKind).search(productKindSelect.val()).draw();
                } else {
                    table.column(columnProductKind).search('').draw();
                }
            });

            productKindSelect.on('change', function () {
                if (productKindCheck.is(":checked")) {
                    table.column(columnProductKind).search(productKindSelect.val()).draw();
                }
            });
            // ----- end - product-kind -------

            // ----- start - product-category -------
            let columnProductCategory = 12;
            let productCategoryCheck = $('#product-category-check');
            let productCategorySelect = $('#product-category-select');

            if (state) {
                let colProductCategorySearch = state.columns[columnProductCategory].search;
                if (colProductCategorySearch.search) {
                    productCategoryCheck.prop("checked", true);
                    productCategorySelect.val(colProductCategorySearch.search);
                }
            }

            productCategoryCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnProductCategory).search(productCategorySelect.val()).draw();
                } else {
                    table.column(columnProductCategory).search('').draw();
                }
            });

            productCategorySelect.on('change', function () {
                if (productCategoryCheck.is(":checked")) {
                    table.column(columnProductCategory).search(productCategorySelect.val()).draw();
                }
            });
            // ----- end - product-category -------

            // ----- start - product-calculation -------
            let columnProductCalculation = 13;
            let productCalculationCheck = $('#product-calculation-check');
            let productCalculationSelect = $('#product-calculation-select');

            if (state) {
                let colProductCalculationSearch = state.columns[columnProductCalculation].search;
                if (colProductCalculationSearch.search) {
                    productCalculationCheck.prop("checked", true);
                    productCalculationSelect.val(colProductCalculationSearch.search);
                }
            }

            productCalculationCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnProductCalculation).search(productCalculationSelect.val()).draw();
                } else {
                    table.column(columnProductCalculation).search('').draw();
                }
            });

            productCalculationSelect.on('change', function () {
                if (productCalculationCheck.is(":checked")) {
                    table.column(columnProductCalculation).search(productCalculationSelect.val()).draw();
                }
            });
            // ----- end - product-calculation -------

            // ----- start - product-analytic-group -------
            let columnProductAnalyticGroup = 14;
            let productAnalyticGroupCheck = $('#product-analytic-group-check');
            let productAnalyticGroupSelect = $('#product-analytic-group-select');

            if (state) {
                let colProductAnalyticGroupSearch = state.columns[columnProductAnalyticGroup].search;
                if (colProductAnalyticGroupSearch.search) {
                    productAnalyticGroupCheck.prop("checked", true);
                    productAnalyticGroupSelect.val(colProductAnalyticGroupSearch.search);
                }
            }

            productAnalyticGroupCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnProductAnalyticGroup).search(productAnalyticGroupSelect.val()).draw();
                } else {
                    table.column(columnProductAnalyticGroup).search('').draw();
                }
            });

            productAnalyticGroupSelect.on('change', function () {
                if (productAnalyticGroupCheck.is(":checked")) {
                    table.column(columnProductAnalyticGroup).search(productAnalyticGroupSelect.val()).draw();
                }
            });
            // ----- end - product-analytic-group -------

            // ----- start - product-finance-group -------
            let columnProductFinanceGroup = 15;
            let productFinanceGroupCheck = $('#product-finance-group-check');
            let productFinanceGroupSelect = $('#product-finance-group-select');

            if (state) {
                let colProductFinanceGroupSearch = state.columns[columnProductFinanceGroup].search;
                if (colProductFinanceGroupSearch.search) {
                    productFinanceGroupCheck.prop("checked", true);
                    productFinanceGroupSelect.val(colProductFinanceGroupSearch.search);
                }
            }

            productFinanceGroupCheck.on('change', function () {
                if (this.checked) {
                    table.column(columnProductFinanceGroup).search(productFinanceGroupSelect.val()).draw();
                } else {
                    table.column(columnProductFinanceGroup).search('').draw();
                }
            });

            productFinanceGroupSelect.on('change', function () {
                if (productFinanceGroupCheck.is(":checked")) {
                    table.column(columnProductFinanceGroup).search(productFinanceGroupSelect.val()).draw();
                }
            });
            // ----- end - product-finance-group -------

        });
    </script>

{% endblock %}